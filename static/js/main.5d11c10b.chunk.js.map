{"version":3,"sources":["models/Task.js","reducers/tasks.js","actions/types.js","reducers/selectedTask.js","reducers/index.js","components/Author.jsx","components/NavItem.jsx","components/CircularProgress.jsx","components/SideNav.jsx","actions/index.js","components/TaskForm.jsx","containers/Header.jsx","components/MainContainer.jsx","components/EmptyMessage.jsx","containers/TaskDetails.jsx","components/TaskSummary.jsx","components/SearchTask.jsx","containers/TaskList.jsx","containers/Tasks.jsx","components/App.jsx","components/Root.jsx","index.js","assets/task-search.svg","assets/task-completed.svg","assets/task-pending.svg","assets/task-in-progress.svg","assets/vishnu.jpg","assets/plus.svg","assets/edit.svg","assets/done.svg","assets/www.svg"],"names":["TaskStatus","Object","freeze","PENDING","IN_PROGRESS","COMPLETED","TaskPriority","HIGH","MEDIUM","LOW","Task","title","description","priority","tags","classCallCheck","this","id","uniqueId","progress","parsePriority","Array","status","createdAt","Date","task","shouldCopyId","arguments","length","undefined","t","value","Error","markAsDone","toLocaleString","hour12","month","year","day","hour","minute","setProgress","toJSON","startProgress","initialState","keyBy","tasks","state","action","type","from","objectSpread","defineProperty","otherTasks","objectWithoutProperties","map","_toPropertyKey","selectedTask","combineReducers","Author","_ref","name","react_default","a","createElement","className","src","VishnuImage","alt","NavItem","props","classes","push","apply","toConsumableArray","join","children","CircularProgress","updateCanvas","Math","ceil","ctx","refs","canvas","getContext","cw","width","ch","height","arcWidth","showLabel","innerRadius","radius","clearRect","beginPath","arc","PI","fillStyle","fill","globalAlpha","strokeStyle","color","lineWidth","stroke","fontSize","textAlign","textBaseline","font","concat","fillText","deltaAngle","startAngle","endAngle","ref","React","Component","SideNav","components_NavItem","components_Author","NavLink","exact","to","activeClassName","TasksIcon","TaskPendingIcon","TaskInProgressIcon","TaskCompleteIcon","components_CircularProgress","updateTask","TaskForm","_useState","useState","_useState2","slicedToArray","setTask","handleValueChange","e","property","target","onSubmit","preventDefault","defaultValue","placeholder","onChange","split","v","trim","onClick","onCancel","propType","PropTypes","shape","string","isRequired","arrayOf","number","func","connect","isCreateModalVisible","setIsCreateModalVisible","handleFormCancel","plusIcon","components_TaskForm","dispatch","addTask","MainContainer","containers_Header","EmptyMessage","WwwIcon","message","isEditing","setIsEditing","isTaskSelected","startCase","tag","key","EditIcon","DoneIcon","components_EmptyMessage","TaskSummary","isSelected","onTaskSelected","SearchTask","onSearch","taskList","keys","filter","setTasks","handleTaskSelection","toggleTaskSelection","components_SearchTask","match","RegExp","components_TaskSummary","bind","Tasks","containers_TaskList","containers_TaskDetails","containers_Tasks","Tasks_Tasks","assign","App","components_SideNav","components_MainContainer","Route","path","component","Root","store","es","BrowserRouter","createStore","rootReducer","render","components_Root","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.5d11c10b.chunk.js","sourcesContent":["import uniqueId from 'lodash/uniqueId';\n\nexport const TaskStatus = Object.freeze({\n  PENDING: 'pending',\n  IN_PROGRESS: 'in_progress',\n  COMPLETED: 'completed'\n});\n\nexport const TaskPriority = Object.freeze({\n  HIGH: 'high',\n  MEDIUM: 'medium',\n  LOW: 'low'\n});\n\nexport default class Task {\n  /**\n   * Copies a task\n   * @param {Task} task instance of a task\n   * @param {boolean} shouldCopyId copy task id also or not\n   */\n  static from(task, shouldCopyId = false) {\n    const t = new Task(task.title, task.description, task.priority, task.tags);\n    if (shouldCopyId) {\n      t.id = task.id;\n    }\n\n    if (task.progress !== undefined) {\n      t.progress = +task.progress;\n    }\n\n    if (task.status) {\n      t.status = task.status;\n    }\n\n    if (task.createdAt) {\n      t.createdAt = task.createdAt;\n    }\n    return t;\n  }\n\n  /**\n   * Parses priority\n   * @param {string} priority task priority\n   * @returns {('not_started'|'in_progress'|'completed')}\n   */\n  static parsePriority(priority) {\n    switch (priority) {\n      case TaskPriority.HIGH:\n        return TaskPriority.HIGH;\n      case TaskPriority.LOW:\n        return TaskPriority.LOW;\n      default:\n        return TaskPriority.MEDIUM;\n    }\n  }\n\n  /**\n   * Creates a task\n   * @param {string} title task title\n   * @param {string} description task description\n   * @param {('not_started'|'in_progress'|'completed')} priority priority of the task\n   * @param {string[]} tags to group tasks\n   */\n  constructor(title, description, priority, tags) {\n    this.id = uniqueId('task-');\n    this.title = title;\n    this.description = description;\n    this.progress = 0;\n    this.priority = Task.parsePriority(priority);\n    this.tags = tags instanceof Array ? tags : ['todo'];\n    this.status = TaskStatus.PENDING;\n    this.createdAt = new Date();\n  }\n\n  /**\n   * Starts the task progress\n   */\n  startProgress() {\n    this.status = TaskStatus.IN_PROGRESS;\n    return this;\n  }\n\n  /**\n   * Sets the progress of a task\n   * @param {number} value progress in percentage\n   */\n  setProgress(value) {\n    if (value > 100 || value < 0) {\n      throw new Error('Invalid progress value');\n    } else if (value === 100) {\n      return this.markAsDone();\n    }\n    this.status = TaskStatus.IN_PROGRESS;\n    this.progress = value;\n    return this;\n  }\n\n  /**\n   * Sets tasks status as complete\n   */\n  markAsDone() {\n    this.status = TaskStatus.COMPLETED;\n    this.progress = 100;\n    return this;\n  }\n\n  toJSON() {\n    return {\n      id: this.id,\n      title: this.title,\n      description: this.description,\n      tags: this.tags,\n      progress: this.progress,\n      priority: this.priority,\n      status: this.status,\n      createdAt: this.createdAt.toLocaleString('en-IN', {\n        hour12: true,\n        month: 'long',\n        year: 'numeric',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    };\n  }\n}\n","import keyBy from 'lodash/keyBy';\nimport Task from '../models/Task';\nimport { ADD_TASK, UPDATE_TASK, DELETE_TASK } from '../actions/types';\n\nconst t = [\n  new Task('Create a todo app in React').setProgress(30).toJSON(),\n  new Task('Complete 100km running in one week').startProgress().toJSON(),\n  new Task('Watch 2 movies this weekend with friends').markAsDone().toJSON(),\n  new Task('Call doctor for appointment').toJSON(),\n  new Task('Pay house rent').toJSON()\n];\nconst initialState = keyBy(t, 'id');\n\nconst tasks = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TASK: {\n      const task = Task.from(action.task).toJSON();\n      return {\n        [task.id]: task,\n        ...state\n      };\n    }\n    case UPDATE_TASK: {\n      const { [action.task.id]: task, ...otherTasks } = state;\n      return {\n        [task.id]: {\n          ...task,\n          ...action.task\n        },\n        ...otherTasks\n      };\n    }\n    case DELETE_TASK: {\n      const { [action.task.id]: task, ...otherTasks } = state;\n      return otherTasks;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tasks;\n","export const ADD_TASK = 'ADD_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const MOVE_TASK = 'MOVE_TASK';\nexport const TOGGLE_TASK_SELECTION = 'TOGGLE_TASK_SELECTION';\n","import { TOGGLE_TASK_SELECTION, UPDATE_TASK } from '../actions/types';\n\nconst initialState = {};\n\nconst selectedTask = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_TASK_SELECTION:\n      return state.id === action.task.id ? initialState : action.task;\n    case UPDATE_TASK:\n      return state.id === action.task.id ? action.task : state;\n    default:\n      return state;\n  }\n};\n\nexport default selectedTask;\n","import { combineReducers } from 'redux';\n\nimport tasks from './tasks';\nimport selectedTask from './selectedTask';\n\nexport default combineReducers({\n  tasks,\n  selectedTask\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/Author.scss';\nimport VishnuImage from '../assets/vishnu.jpg';\n\nconst Author = ({ name }) => (\n  <div className=\"author\">\n    <img className=\"author__avatar\" src={VishnuImage} alt=\"User\" />\n    <div className=\"author__details\">\n      <div className=\"author__label\">Showing tasks for</div>\n      <div className=\"author__name\">{name}</div>\n    </div>\n  </div>\n);\n\nAuthor.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nexport default Author;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NavItem = props => {\n  const classes = ['nav__item'];\n\n  if (props.classes && props.classes instanceof Array) {\n    classes.push(...props.classes);\n  } else if (props.classes) {\n    classes.push(props.classes);\n  }\n\n  return <div className={classes.join(' ')}>{props.children}</div>;\n};\n\nNavItem.propTypes = {\n  classes: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)])\n    .isRequired\n};\n\nexport default NavItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass CircularProgress extends React.Component {\n  componentDidMount() {\n    this.updateCanvas();\n  }\n  componentDidUpdate() {\n    this.updateCanvas();\n  }\n\n  updateCanvas() {\n    const progress = Math.ceil(this.props.progress);\n\n    const ctx = this.refs.canvas.getContext('2d');\n    const cw = ctx.canvas.width / 2;\n    const ch = ctx.canvas.height / 2;\n\n    const arcWidth = this.props.showLabel\n      ? (this.props.width * 10) / 100\n      : (this.props.width * 15) / 100;\n\n    const innerRadius = this.props.width / 2 - arcWidth;\n    const radius = (this.props.width - arcWidth) / 2;\n\n    // clear canvas\n    ctx.clearRect(0, 0, this.props.width, this.props.width);\n\n    // draw inner circle\n    ctx.beginPath();\n    ctx.arc(cw, ch, innerRadius, 0, 2 * Math.PI, false);\n    ctx.fillStyle = '#FFF';\n    ctx.fill();\n\n    // draw progress track\n    ctx.beginPath();\n    ctx.arc(cw, ch, radius, 0, 2 * Math.PI, false);\n    ctx.globalAlpha = 0.5;\n    ctx.strokeStyle = this.props.color;\n    ctx.lineWidth = arcWidth;\n    ctx.stroke();\n    ctx.globalAlpha = 1;\n\n    if (this.props.showLabel) {\n      // write progress text\n      const fontSize = (this.props.width * 15) / 100;\n      ctx.fillStyle = '#000';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.font = `${fontSize}pt Verdana`;\n      ctx.fillText(progress + '%', cw + 2, ch);\n    }\n\n    // draw progress arc\n    const deltaAngle = (progress * Math.PI * 2) / 100;\n    const startAngle = -Math.PI / 2;\n    const endAngle = -(deltaAngle - startAngle);\n    ctx.beginPath();\n    ctx.arc(cw, ch, radius, startAngle, endAngle, true);\n    ctx.strokeStyle = this.props.color;\n    ctx.stroke();\n  }\n\n  render() {\n    return (\n      <canvas\n        className={this.props.className}\n        ref=\"canvas\"\n        width={this.props.width}\n        height={this.props.width}\n      />\n    );\n  }\n}\n\nCircularProgress.propTypes = {\n  color: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n  showLabel: PropTypes.bool,\n  progress: PropTypes.number.isRequired\n};\n\nexport default CircularProgress;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport '../styles/SideNav.scss';\nimport TasksIcon from '../assets/task-search.svg';\nimport TaskCompleteIcon from '../assets/task-completed.svg';\nimport TaskPendingIcon from '../assets/task-pending.svg';\nimport TaskInProgressIcon from '../assets/task-in-progress.svg';\n\nimport Author from './Author';\nimport NavItem from './NavItem';\nimport CircularProgress from './CircularProgress';\n\nconst SideNav = () => (\n  <nav className=\"app__side-nav nav\">\n    <NavItem classes=\"nav__header\">\n      <Author name=\"Vishnu Singh\" />\n    </NavItem>\n    <NavItem>\n      <NavLink exact to=\"/tasks\" className=\"nav__link link\" activeClassName=\"link_active\">\n        <img src={TasksIcon} alt=\"task\" className=\"link__icon\" />\n        <span className=\"link__text\">All Tasks</span>\n      </NavLink>\n    </NavItem>\n    <NavItem>\n      <NavLink to=\"/tasks/pending\" className=\"nav__link link\" activeClassName=\"link_active\">\n        <img src={TaskPendingIcon} alt=\"task\" className=\"link__icon\" />\n        <span className=\"link__text\">Pending</span>\n      </NavLink>\n    </NavItem>\n    <NavItem>\n      <NavLink to=\"/tasks/in-progress\" className=\"nav__link link\" activeClassName=\"link_active\">\n        <img src={TaskInProgressIcon} alt=\"task\" className=\"link__icon\" />\n        <span className=\"link__text\">In Progress</span>\n      </NavLink>\n    </NavItem>\n    <NavItem>\n      <NavLink to=\"/tasks/completed\" className=\"nav__link link\" activeClassName=\"link_active\">\n        <img src={TaskCompleteIcon} alt=\"task\" className=\"link__icon\" />\n        <span className=\"link__text\">Completed</span>\n      </NavLink>\n    </NavItem>\n    <NavItem classes=\"overall-progress\">\n      <div className=\"overall-progress__label\">Task Progress</div>\n      <CircularProgress\n        className=\"overall-progress__canvas\"\n        color=\"#fbc02d\"\n        showLabel\n        width={150}\n        progress={70}\n      />\n    </NavItem>\n  </nav>\n);\n\nexport default SideNav;\n","import * as actionTypes from './types';\n\nexport const addTask = task => ({\n  type: actionTypes.ADD_TASK,\n  task\n});\n\nexport const updateTask = task => ({\n  type: actionTypes.UPDATE_TASK,\n  task\n});\n\nexport const deleteTask = task => ({\n  type: actionTypes.DELETE_TASK,\n  task\n});\n\nexport const moveTask = (task, position) => ({\n  type: actionTypes.MOVE_TASK,\n  task,\n  position\n});\n\nexport const toggleTaskSelection = task => ({\n  type: actionTypes.TOGGLE_TASK_SELECTION,\n  task\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/TaskForm.scss';\nimport { TaskStatus, TaskPriority } from '../models/Task';\n\nconst TaskForm = props => {\n  const [task, setTask] = useState(props.task || {});\n\n  const handleTagsChange = e => {\n    setTask({\n      ...task,\n      tags: e.target.value ? e.target.value.split(',').map(v => v.trim()) : []\n    });\n  };\n\n  const handleProgressChange = e => {\n    const value = +e.target.value;\n    let status = task.status;\n\n    if (value === 100) {\n      status = TaskStatus.COMPLETED;\n    } else if (value === 0) {\n      status = TaskStatus.PENDING;\n    } else {\n      status = TaskStatus.IN_PROGRESS;\n    }\n\n    setTask({ ...task, progress: value, status });\n  };\n\n  const handleValueChange = (e, property) => {\n    setTask({ ...task, [property]: e.target.value });\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    props.onSubmit(task);\n  };\n\n  const handleFormCancel = e => {\n    e.preventDefault();\n    props.onCancel();\n  };\n\n  return (\n    <form className=\"task-form\" onSubmit={handleFormSubmit}>\n      <h1 className=\"task-form__title\">{props.task ? 'Edit Task' : 'Create Task '}</h1>\n      <div className=\"task-form__group\">\n        <label className=\"task-form__label\">Title:</label>\n        <input\n          className=\"task-form__input\"\n          type=\"text\"\n          defaultValue={props.task && props.task.title}\n          placeholder=\"Task summary\"\n          onChange={e => handleValueChange(e, 'title')}\n        />\n      </div>\n      <div className=\"task-form__group\">\n        <label className=\"task-form__label\">Description:</label>\n        <textarea\n          className=\"task-form__input\"\n          type=\"text\"\n          defaultValue={props.task && props.task.description}\n          placeholder=\"Task details (optional)\"\n          onChange={e => handleValueChange(e, 'description')}\n        />\n      </div>\n      <div className=\"task-form__group\">\n        <label className=\"task-form__label\">Tags:</label>\n        <input\n          className=\"task-form__input\"\n          type=\"text\"\n          defaultValue={props.task && props.task.tags ? props.task.tags.join() : ''}\n          placeholder=\"Comma-separated tags\"\n          onChange={handleTagsChange}\n        />\n      </div>\n      <div className=\"task-form__group\">\n        <label className=\"task-form__label\">Progress:</label>\n        <input\n          className=\"task-form__input\"\n          type=\"number\"\n          defaultValue={props.task && props.task.progress}\n          placeholder=\"Progress in percentage between (0-100)\"\n          onChange={handleProgressChange}\n        />\n      </div>\n      <div className=\"task-form__group\">\n        <label className=\"task-form__label\">Progress:</label>\n        <select\n          className=\"task-form__input\"\n          defaultValue={props.task && props.task.priority}\n          placeholder=\"Task priority\"\n          onChange={e => handleValueChange(e, 'priority')}\n        >\n          <option value={TaskPriority.LOW}>Low</option>\n          <option value={TaskPriority.MEDIUM}>Medium</option>\n          <option value={TaskPriority.HIGH}>High</option>\n        </select>\n      </div>\n      <div className=\"task-form__group task-form__group_right\">\n        <button\n          className=\"task-form__action button button_default\"\n          type=\"button\"\n          onClick={handleFormCancel}\n        >\n          Cancel\n        </button>\n        <button className=\"task-form__action button button_info\" type=\"submit\">\n          {props.task ? 'Update' : 'Create'}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nTaskForm.propType = {\n  task: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n    progress: PropTypes.number.isRequired,\n    priority: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired\n  }),\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};\n\nexport default TaskForm;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport '../styles/Header.scss';\nimport { addTask } from '../actions';\nimport plusIcon from '../assets/plus.svg';\nimport TaskForm from '../components/TaskForm';\n\nconst Header = props => {\n  const [isCreateModalVisible, setIsCreateModalVisible] = useState(false);\n\n  const handleFormSubmit = task => {\n    setIsCreateModalVisible(false);\n    props.dispatch(addTask(task));\n  };\n\n  const handleFormCancel = () => {\n    setIsCreateModalVisible(false);\n  };\n\n  return (\n    <header className=\"app__header header\">\n      <div className=\"header__title\">{props.title}</div>\n      <button\n        className=\"header__action button button_default\"\n        onClick={() => setIsCreateModalVisible(true)}\n      >\n        <img src={plusIcon} className=\"button__icon\" alt=\"plus\" />\n        <span className=\"button__text\">Add Tasks</span>\n      </button>\n      {isCreateModalVisible && (\n        <div className=\"modal\">\n          <div className=\"modal__body\">\n            <TaskForm onSubmit={handleFormSubmit} onCancel={handleFormCancel} />\n          </div>\n          <div className=\"modal__backdrop\" onClick={handleFormCancel} />\n        </div>\n      )}\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default connect()(Header);\n","import React from 'react';\n\nimport Header from '../containers/Header';\n\nconst MainContainer = props => (\n  <div className=\"app__main-container\">\n    <Header title=\"All Tasks\" />\n    <div className=\"app__body\">{props.children}</div>\n  </div>\n);\n\nexport default MainContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/EmptyMessage.scss';\nimport WwwIcon from '../assets/www.svg';\n\nconst EmptyMessage = props => (\n  <div className=\"empty-message\">\n    <img src={WwwIcon} alt=\"www\" className=\"empty-message__icon\" />\n    <p className=\"empty-message__message\">{props.message}</p>\n  </div>\n);\n\nEmptyMessage.propTypes = {\n  message: PropTypes.string.isRequired\n};\n\nexport default EmptyMessage;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport startCase from 'lodash/startCase';\n\nimport '../styles/TaskDetails.scss';\nimport { updateTask } from '../actions';\nimport EditIcon from '../assets/edit.svg';\nimport DoneIcon from '../assets/done.svg';\nimport Task, { TaskStatus } from '../models/Task';\nimport EmptyMessage from '../components/EmptyMessage';\nimport CircularProgress from '../components/CircularProgress';\nimport TaskForm from '../components/TaskForm';\n\nconst TaskDetails = props => {\n  const [isEditing, setIsEditing] = useState(false);\n  const task = props.selectedTask;\n  const isTaskSelected = !!task.id;\n\n  const handleMarkAsDone = () => {\n    const t = Task.from(task, true);\n    props.dispatch(updateTask(t.markAsDone().toJSON()));\n  };\n\n  const handleEditTask = task => {\n    const t = Task.from(task, true);\n    setIsEditing(false);\n    props.dispatch(updateTask(t.toJSON()));\n  };\n\n  const handleFormCancel = () => {\n    setIsEditing(false);\n  };\n\n  if (isTaskSelected && isEditing) {\n    return (\n      <div className=\"tasks__details task-panel\">\n        <TaskForm task={task} onSubmit={handleEditTask} onCancel={handleFormCancel} />\n      </div>\n    );\n  } else if (isTaskSelected) {\n    return (\n      <div className=\"tasks__details task-panel\">\n        <h1 className=\"task-panel__title\">{task.title}</h1>\n        <div className=\"task-panel__metas\">\n          <div className=\"task-panel__section\">\n            <CircularProgress\n              className=\"task-panel__canvas\"\n              color=\"#fbc02d\"\n              showLabel\n              width={150}\n              progress={task.progress}\n            />\n          </div>\n          <div className=\"task-panel__section\">\n            <div className=\"meta\">\n              <span className=\"meta__title\">ID:</span>\n              <span className=\"meta__value\">{task.id}</span>\n            </div>\n            <div className=\"meta\">\n              <span className=\"meta__title\">Date of creation:</span>\n              <span className=\"meta__value\">{task.createdAt}</span>\n            </div>\n            <div className=\"meta\">\n              <span className=\"meta__title\">Priority:</span>\n              <span className=\"meta__value\">{startCase(task.priority)}</span>\n            </div>\n            <div className=\"meta\">\n              <span className=\"meta__title\">Tags:</span>\n              <span className=\"meta__value\">\n                {task.tags.map((tag, key) => (\n                  <span key={key} className=\"tag\">\n                    {tag}\n                  </span>\n                ))}\n              </span>\n            </div>\n            <div className=\"meta\">\n              <span className=\"meta__title\">Status:</span>\n              <span className=\"meta__value\">{startCase(task.status)}</span>\n            </div>\n          </div>\n        </div>\n        {task.description && <div className=\"task-panel__details-label\">Description: </div>}\n        <p className=\"task-panel__details\">{task.description}</p>\n        {task.status !== TaskStatus.COMPLETED && (\n          <div className=\"task-panel__actions\">\n            <button className=\"button button_info\" onClick={() => setIsEditing(true)}>\n              <img src={EditIcon} alt=\"edit\" className=\"button__icon\" />\n              <span className=\"button__text\">Edit Task</span>\n            </button>\n            <button className=\"button button_success\" onClick={handleMarkAsDone}>\n              <img src={DoneIcon} alt=\"done\" className=\"button__icon\" />\n              <span className=\"button__text\">Done</span>\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"tasks__details task-panel\">\n      <EmptyMessage message=\"No tasks selected\" />\n    </div>\n  );\n};\n\nexport default connect(state => ({ selectedTask: state.selectedTask }))(TaskDetails);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/TaskSummary.scss';\nimport CircularProgress from './CircularProgress';\n\nconst TaskSummary = props => {\n  const classes = props.isSelected ? 'task-list__item task task_selected' : 'task-list__item task';\n  return (\n    <div className={classes} onClick={props.onTaskSelected}>\n      <div className=\"task__drag-handle\" />\n      <div className=\"task__details\">\n        <div className=\"task__title\">{props.task.title}</div>\n        <div className=\"task__tags\">\n          {props.task.tags.map((tag, key) => (\n            <span className=\"tag\" key={key}>\n              {tag}\n            </span>\n          ))}\n        </div>\n      </div>\n      <CircularProgress\n        className=\"task__progress\"\n        color=\"#7e57c2\"\n        width={40}\n        progress={props.task.progress}\n      />\n    </div>\n  );\n};\n\nTaskSummary.propTypes = {\n  isSelected: PropTypes.bool,\n  task: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n    progress: PropTypes.number.isRequired,\n    priority: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired\n  }),\n  onTaskSelected: PropTypes.func.isRequired\n};\n\nexport default TaskSummary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/SearchTask.scss';\n\nconst SearchTask = props => {\n  return (\n    <div className=\"task-list__search search\">\n      <input\n        type=\"text\"\n        className=\"search__input\"\n        placeholder=\"Search tasks\"\n        onChange={e => props.onSearch(e.target.value)}\n      />\n    </div>\n  );\n};\n\nSearchTask.propType = {\n  onSearch: PropTypes.func.isRequired\n};\n\nexport default SearchTask;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport '../styles/TaskList.scss';\nimport { toggleTaskSelection } from '../actions';\nimport TaskSummary from '../components/TaskSummary';\nimport SearchTask from '../components/SearchTask';\nimport EmptyMessage from '../components/EmptyMessage';\n\nconst TaskList = props => {\n  const taskList = Object.keys(props.tasks)\n    .map(t => props.tasks[t])\n    .filter(t => t.status === props.status || props.status === 'all');\n\n  const [tasks, setTasks] = useState(taskList);\n\n  const handleSearch = title => {\n    setTasks(taskList.filter(task => task.title.match(new RegExp(title, 'i'))));\n  };\n\n  const handleTaskSelection = task => {\n    props.dispatch(toggleTaskSelection(task));\n  };\n\n  if (tasks.length) {\n    return (\n      <div className=\"tasks__list task-list\">\n        <SearchTask onSearch={handleSearch} />\n        <div className=\"task-list__list\">\n          {tasks.map((task, key) => (\n            <TaskSummary\n              key={key}\n              task={task}\n              isSelected={props.selectedTask.id === task.id}\n              onTaskSelected={handleTaskSelection.bind(null, task)}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"tasks__list task-list\">\n      <EmptyMessage message=\"No tasks!\" />\n    </div>\n  );\n};\n\nTaskList.propTypes = {\n  status: PropTypes.string\n};\n\nexport default connect(state => ({\n  tasks: state.tasks,\n  selectedTask: state.selectedTask\n}))(TaskList);\n","import React from 'react';\n\nimport '../styles/Tasks.scss';\nimport TaskDetails from './TaskDetails';\nimport TaskList from './TaskList';\n\nconst Tasks = props => (\n  <div className=\"tasks\">\n    <TaskList status={props.status} />\n    <TaskDetails />\n  </div>\n);\n\nexport default status => props => <Tasks {...props} status={status} />;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport '../styles/App.scss';\nimport SideNav from './SideNav';\nimport MainContainer from './MainContainer';\nimport Tasks from '../containers/Tasks';\nimport { TaskStatus } from '../models/Task';\n\nconst App = props => (\n  <div className=\"app\">\n    <SideNav />\n    <MainContainer>\n      <Route path={`${props.match.path}/completed`} component={Tasks(TaskStatus.COMPLETED)} />\n      <Route path={`${props.match.path}/in-progress`} component={Tasks(TaskStatus.IN_PROGRESS)} />\n      <Route path={`${props.match.path}/pending`} component={Tasks(TaskStatus.PENDING)} />\n      <Route exact path={`${props.match.path}`} component={Tasks('all')} />\n    </MainContainer>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport App from './App';\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router>\n      <Route path=\"/tasks\" component={App} />\n    </Router>\n  </Provider>\n);\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired\n};\n\nexport default Root;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers';\nimport Root from './components/Root';\n\nimport './index.scss';\n\nconst store = createStore(rootReducer);\n\nrender(<Root store={store} />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/task-search.e7cffb9d.svg\";","module.exports = __webpack_public_path__ + \"static/media/task-completed.981ae311.svg\";","module.exports = __webpack_public_path__ + \"static/media/task-pending.2bfbf733.svg\";","module.exports = __webpack_public_path__ + \"static/media/task-in-progress.9be52237.svg\";","module.exports = __webpack_public_path__ + \"static/media/vishnu.59c6254c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/plus.8601f5bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.522a418b.svg\";","module.exports = __webpack_public_path__ + \"static/media/done.c2625638.svg\";","module.exports = __webpack_public_path__ + \"static/media/www.c94aea67.svg\";"],"sourceRoot":""}