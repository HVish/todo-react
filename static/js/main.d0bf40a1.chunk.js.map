{"version":3,"sources":["utils/index.js","constants/tasks.js","reducers/tasks.js","constants/action-types.js","reducers/selectedTask.js","reducers/index.js","components/Author.jsx","components/NavItem.jsx","components/SideNav.jsx","actions/todos.js","components/TaskForm.jsx","containers/Header.jsx","components/MainContainer.jsx","components/EmptyMessage.jsx","components/CircularProgress.jsx","containers/TaskDetails.jsx","components/SearchTask.jsx","components/TaskSummary.jsx","containers/TaskList.jsx","containers/Tasks.jsx","components/App.jsx","components/Root.jsx","index.js","utils/store.js","assets/task-search.svg","assets/task-pending.svg","assets/task-archived.svg","assets/task-completed.svg","assets/task-in-progress.svg","assets/vishnu.jpg","assets/plus.svg","assets/bin.svg","assets/edit.svg","assets/done.svg","assets/www.svg"],"names":["formatDate","dateString","timestamp","Date","parse","isNaN","toLocaleString","hour12","month","year","day","hour","minute","TaskStatus","Object","freeze","PENDING","IN_PROGRESS","COMPLETED","ARCHIVED","TaskPriority","HIGH","MEDIUM","LOW","t","id","uniqueId","title","description","progress","priority","tags","status","createdAt","initialState","keyBy","tasks","state","arguments","length","undefined","action","type","task","defaults","objectSpread","defineProperty","otherTasks","objectWithoutProperties","map","_toPropertyKey","selectedTask","taskId","combineReducers","Author","_ref","name","react_default","a","createElement","className","src","VishnuImage","alt","NavItem","props","classes","Array","push","apply","toConsumableArray","join","children","SideNav","components_NavItem","components_Author","NavLink","exact","to","activeClassName","TasksIcon","TaskPendingIcon","TaskInProgressIcon","TaskCompleteIcon","TaskArchivedIcon","updateTask","TaskForm","_useState","useState","_useState2","slicedToArray","setTask","handleValueChange","e","property","target","value","onSubmit","preventDefault","defaultValue","placeholder","onChange","onClick","onCancel","propType","PropTypes","shape","string","isRequired","arrayOf","number","func","connect","isCreateModalVisible","setIsCreateModalVisible","handleFormCancel","plusIcon","components_TaskForm","dispatch","addTask","MainContainer","containers_Header","EmptyMessage","WwwIcon","message","CircularProgress","this","updateCanvas","Math","ceil","ctx","refs","canvas","getContext","cw","width","ch","height","arcWidth","showLabel","innerRadius","radius","clearRect","beginPath","arc","PI","fillStyle","fill","globalAlpha","strokeStyle","color","lineWidth","stroke","fontSize","textAlign","textBaseline","font","concat","fillText","deltaAngle","startAngle","endAngle","ref","React","Component","isEditing","setIsEditing","isTaskSelected","handleMarkAsDone","handleMarkAsArchived","components_CircularProgress","startCase","split","tag","key","trim","BinIcon","EditIcon","DoneIcon","TaskActions","components_EmptyMessage","SearchTask","onSearch","TaskSummary","isSelected","onTaskSelected","TaskList","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","filter","setState","match","RegExp","_this2","components_SearchTask","handleSearch","bind","components_TaskSummary","handleTaskSelection","keys","k","Tasks","containers_TaskList","containers_TaskDetails","containers_Tasks","Tasks_Tasks","assign","App","components_SideNav","components_MainContainer","Route","path","component","Root","store","es","BrowserRouter","basename","process","middlewares","next","console","group","info","result","log","getState","groupEnd","createStore","rootReducer","composeWithDevTools","applyMiddleware","render","components_Root","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d0bf40a1.chunk.js","sourcesContent":["/**\n * Formats date in `DD MMMM YYYY, h:mm a` format\n * @param {string|Date} dateString valid date string in ISO format\n */\nexport function formatDate(dateString) {\n  const timestamp = Date.parse(dateString);\n\n  if (!isNaN(timestamp)) {\n    const date = new Date(dateString);\n    return date.toLocaleString('en-IN', {\n      hour12: true,\n      month: 'long',\n      year: 'numeric',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n\n  return '';\n}\n","export const TaskStatus = Object.freeze({\n  PENDING: 'pending',\n  IN_PROGRESS: 'in_progress',\n  COMPLETED: 'completed',\n  ARCHIVED: 'archived'\n});\n\nexport const TaskPriority = Object.freeze({\n  HIGH: 'high',\n  MEDIUM: 'medium',\n  LOW: 'low'\n});\n","import keyBy from 'lodash/keyBy';\nimport defaults from 'lodash/defaults';\nimport uniqueId from 'lodash/uniqueId';\n\nimport { formatDate } from '../utils';\nimport { TaskPriority, TaskStatus } from '../constants/tasks';\nimport { ADD_TASK, UPDATE_TASK, DELETE_TASK } from '../constants/action-types';\n\nconst t = [\n  {\n    id: uniqueId('task-'),\n    title: 'Create a todo app in React',\n    description: '',\n    progress: 30,\n    priority: TaskPriority.HIGH,\n    tags: 'todo, work',\n    status: TaskStatus.PENDING,\n    createdAt: formatDate(new Date())\n  },\n  {\n    id: uniqueId('task-'),\n    title: 'Complete 100km running in one week',\n    description: '',\n    progress: 0,\n    priority: TaskPriority.MEDIUM,\n    tags: 'health',\n    status: TaskStatus.PENDING,\n    createdAt: formatDate(new Date())\n  },\n  {\n    id: uniqueId('task-'),\n    title: 'Watch 2 movies this weekend with friends',\n    description: '',\n    progress: 100,\n    priority: TaskPriority.LOW,\n    tags: 'life, friends',\n    status: TaskStatus.COMPLETED,\n    createdAt: formatDate(new Date())\n  },\n  {\n    id: uniqueId('task-'),\n    title: 'Call doctor for appointments',\n    description: '',\n    progress: 0,\n    priority: TaskPriority.LOW,\n    tags: 'health',\n    status: TaskStatus.PENDING,\n    createdAt: formatDate(new Date())\n  },\n  {\n    id: uniqueId('task-'),\n    title: 'Pay house rent',\n    description: '',\n    progress: 0,\n    priority: TaskPriority.LOW,\n    tags: 'todo',\n    status: TaskStatus.PENDING,\n    createdAt: formatDate(new Date())\n  }\n];\n\nconst initialState = keyBy(t, 'id');\n\nconst tasks = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TASK: {\n      const task = defaults(action.task, {\n        id: uniqueId('task-'),\n        title: 'Untitled task',\n        description: '',\n        progress: 0,\n        priority: TaskPriority.LOW,\n        tags: 'todo',\n        status: TaskStatus.PENDING,\n        createdAt: formatDate(new Date())\n      });\n      return {\n        [task.id]: task,\n        ...state\n      };\n    }\n    case UPDATE_TASK: {\n      const { [action.task.id]: task, ...otherTasks } = state;\n      return {\n        [task.id]: {\n          ...task,\n          ...action.task\n        },\n        ...otherTasks\n      };\n    }\n    case DELETE_TASK: {\n      const { [action.task.id]: task, ...otherTasks } = state;\n      return otherTasks;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tasks;\n","export const ADD_TASK = 'ADD_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const MOVE_TASK = 'MOVE_TASK';\nexport const TOGGLE_TASK_SELECTION = 'TOGGLE_TASK_SELECTION';\n","import { TOGGLE_TASK_SELECTION } from '../constants/action-types';\n\nconst initialState = null;\n\nconst selectedTask = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_TASK_SELECTION:\n      return state === action.taskId ? initialState : action.taskId;\n    default:\n      return state;\n  }\n};\n\nexport default selectedTask;\n","import { combineReducers } from 'redux';\n\nimport tasks from './tasks';\nimport selectedTask from './selectedTask';\n\nexport default combineReducers({\n  tasks,\n  selectedTask\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/Author.scss';\nimport VishnuImage from '../assets/vishnu.jpg';\n\nconst Author = ({ name }) => (\n  <div className=\"author\">\n    <img className=\"author__avatar\" src={VishnuImage} alt=\"User\" />\n    <div className=\"author__details\">\n      <div className=\"author__label\">Showing tasks for</div>\n      <div className=\"author__name\">{name}</div>\n    </div>\n  </div>\n);\n\nAuthor.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nexport default Author;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NavItem = props => {\n  const classes = ['nav__item'];\n\n  if (props.classes && props.classes instanceof Array) {\n    classes.push(...props.classes);\n  } else if (props.classes) {\n    classes.push(props.classes);\n  }\n\n  return <div className={classes.join(' ')}>{props.children}</div>;\n};\n\nNavItem.propTypes = {\n  classes: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)])\n    .isRequired\n};\n\nexport default NavItem;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport '../styles/SideNav.scss';\nimport TasksIcon from '../assets/task-search.svg';\nimport TaskPendingIcon from '../assets/task-pending.svg';\nimport TaskArchivedIcon from '../assets/task-archived.svg';\nimport TaskCompleteIcon from '../assets/task-completed.svg';\nimport TaskInProgressIcon from '../assets/task-in-progress.svg';\n\nimport Author from './Author';\nimport NavItem from './NavItem';\n\nconst SideNav = () => (\n  <nav className=\"app__side-nav nav\">\n    <NavItem classes=\"nav__header\">\n      <Author name=\"Vishnu Singh\" />\n    </NavItem>\n    <NavItem>\n      <NavLink exact to=\"/tasks\" className=\"nav__link link\" activeClassName=\"link_active\">\n        <img src={TasksIcon} alt=\"task\" className=\"link__icon\" />\n        <span className=\"link__text\">All Tasks</span>\n      </NavLink>\n    </NavItem>\n    <NavItem>\n      <NavLink to=\"/tasks/pending\" className=\"nav__link link\" activeClassName=\"link_active\">\n        <img src={TaskPendingIcon} alt=\"task\" className=\"link__icon\" />\n        <span className=\"link__text\">Pending</span>\n      </NavLink>\n    </NavItem>\n    <NavItem>\n      <NavLink to=\"/tasks/in-progress\" className=\"nav__link link\" activeClassName=\"link_active\">\n        <img src={TaskInProgressIcon} alt=\"task\" className=\"link__icon\" />\n        <span className=\"link__text\">In Progress</span>\n      </NavLink>\n    </NavItem>\n    <NavItem>\n      <NavLink to=\"/tasks/completed\" className=\"nav__link link\" activeClassName=\"link_active\">\n        <img src={TaskCompleteIcon} alt=\"task\" className=\"link__icon\" />\n        <span className=\"link__text\">Completed</span>\n      </NavLink>\n    </NavItem>\n    <NavItem>\n      <NavLink to=\"/tasks/archived\" className=\"nav__link link\" activeClassName=\"link_active\">\n        <img src={TaskArchivedIcon} alt=\"task\" className=\"link__icon\" />\n        <span className=\"link__text\">Archived</span>\n      </NavLink>\n    </NavItem>\n    {/* <NavItem classes=\"overall-progress\">\n      <div className=\"overall-progress__label\">Task Progress</div>\n      <CircularProgress\n        className=\"overall-progress__canvas\"\n        color=\"#fbc02d\"\n        showLabel\n        width={150}\n        progress={70}\n      />\n    </NavItem> */}\n  </nav>\n);\n\nexport default SideNav;\n","import * as actionTypes from '../constants/action-types';\n\nexport const addTask = task => ({\n  type: actionTypes.ADD_TASK,\n  task\n});\n\nexport const updateTask = task => ({\n  type: actionTypes.UPDATE_TASK,\n  task\n});\n\nexport const deleteTask = task => ({\n  type: actionTypes.DELETE_TASK,\n  task\n});\n\nexport const moveTask = (task, position) => ({\n  type: actionTypes.MOVE_TASK,\n  task,\n  position\n});\n\nexport const toggleTaskSelection = taskId => ({\n  type: actionTypes.TOGGLE_TASK_SELECTION,\n  taskId\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/TaskForm.scss';\nimport { TaskStatus, TaskPriority } from '../constants/tasks';\n\nconst TaskForm = props => {\n  const [task, setTask] = useState(props.task || {});\n\n  const handleProgressChange = e => {\n    const value = +e.target.value;\n    let status = task.status;\n\n    if (value === 100) {\n      status = TaskStatus.COMPLETED;\n    } else if (value === 0) {\n      status = TaskStatus.PENDING;\n    } else {\n      status = TaskStatus.IN_PROGRESS;\n    }\n\n    setTask({ ...task, progress: value, status });\n  };\n\n  const handleValueChange = (e, property) => {\n    setTask({ ...task, [property]: e.target.value });\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    props.onSubmit(task);\n  };\n\n  const handleFormCancel = e => {\n    e.preventDefault();\n    props.onCancel();\n  };\n\n  return (\n    <form className=\"task-form\" onSubmit={handleFormSubmit}>\n      <h1 className=\"task-form__title\">{props.task ? 'Edit Task' : 'Create Task '}</h1>\n      <div className=\"task-form__group\">\n        <label className=\"task-form__label\">Title:</label>\n        <input\n          className=\"task-form__input\"\n          type=\"text\"\n          defaultValue={props.task && props.task.title}\n          placeholder=\"Task summary\"\n          onChange={e => handleValueChange(e, 'title')}\n        />\n      </div>\n      <div className=\"task-form__group\">\n        <label className=\"task-form__label\">Description:</label>\n        <textarea\n          className=\"task-form__input\"\n          type=\"text\"\n          defaultValue={props.task && props.task.description}\n          placeholder=\"Task details (optional)\"\n          onChange={e => handleValueChange(e, 'description')}\n        />\n      </div>\n      <div className=\"task-form__group\">\n        <label className=\"task-form__label\">Tags:</label>\n        <input\n          className=\"task-form__input\"\n          type=\"text\"\n          defaultValue={props.task && props.task.tags}\n          placeholder=\"Comma-separated tags\"\n          onChange={e => handleValueChange(e, 'tags')}\n        />\n      </div>\n      <div className=\"task-form__group\">\n        <label className=\"task-form__label\">Progress:</label>\n        <input\n          className=\"task-form__input\"\n          type=\"number\"\n          defaultValue={props.task && props.task.progress}\n          placeholder=\"Progress in percentage between (0-100)\"\n          onChange={handleProgressChange}\n        />\n      </div>\n      <div className=\"task-form__group\">\n        <label className=\"task-form__label\">Progress:</label>\n        <select\n          className=\"task-form__input\"\n          defaultValue={props.task && props.task.priority}\n          placeholder=\"Task priority\"\n          onChange={e => handleValueChange(e, 'priority')}\n        >\n          <option value={TaskPriority.LOW}>Low</option>\n          <option value={TaskPriority.MEDIUM}>Medium</option>\n          <option value={TaskPriority.HIGH}>High</option>\n        </select>\n      </div>\n      <div className=\"task-form__group task-form__group_right\">\n        <button\n          className=\"task-form__action button button_default\"\n          type=\"button\"\n          onClick={handleFormCancel}\n        >\n          Cancel\n        </button>\n        <button className=\"task-form__action button button_info\" type=\"submit\">\n          {props.task ? 'Update' : 'Create'}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nTaskForm.propType = {\n  task: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n    progress: PropTypes.number.isRequired,\n    priority: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired\n  }),\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};\n\nexport default TaskForm;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport '../styles/Header.scss';\nimport { addTask } from '../actions';\nimport plusIcon from '../assets/plus.svg';\nimport TaskForm from '../components/TaskForm';\n\nconst Header = props => {\n  const [isCreateModalVisible, setIsCreateModalVisible] = useState(false);\n\n  const handleFormSubmit = task => {\n    setIsCreateModalVisible(false);\n    props.dispatch(addTask(task));\n  };\n\n  const handleFormCancel = () => {\n    setIsCreateModalVisible(false);\n  };\n\n  return (\n    <header className=\"app__header header\">\n      <div className=\"header__title\">{props.title}</div>\n      <button\n        className=\"header__action button button_default\"\n        onClick={() => setIsCreateModalVisible(true)}\n      >\n        <img src={plusIcon} className=\"button__icon\" alt=\"plus\" />\n        <span className=\"button__text\">Add Tasks</span>\n      </button>\n      {isCreateModalVisible && (\n        <div className=\"modal\">\n          <div className=\"modal__body\">\n            <TaskForm onSubmit={handleFormSubmit} onCancel={handleFormCancel} />\n          </div>\n          <div className=\"modal__backdrop\" onClick={handleFormCancel} />\n        </div>\n      )}\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default connect()(Header);\n","import React from 'react';\n\nimport Header from '../containers/Header';\n\nconst MainContainer = props => (\n  <div className=\"app__main-container\">\n    <Header title=\"All Tasks\" />\n    <div className=\"app__body\">{props.children}</div>\n  </div>\n);\n\nexport default MainContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/EmptyMessage.scss';\nimport WwwIcon from '../assets/www.svg';\n\nconst EmptyMessage = props => (\n  <div className=\"empty-message\">\n    <img src={WwwIcon} alt=\"www\" className=\"empty-message__icon\" />\n    <p className=\"empty-message__message\">{props.message}</p>\n  </div>\n);\n\nEmptyMessage.propTypes = {\n  message: PropTypes.string.isRequired\n};\n\nexport default EmptyMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass CircularProgress extends React.Component {\n  componentDidMount() {\n    this.updateCanvas();\n  }\n  componentDidUpdate() {\n    this.updateCanvas();\n  }\n\n  updateCanvas() {\n    const progress = Math.ceil(this.props.progress);\n\n    const ctx = this.refs.canvas.getContext('2d');\n    const cw = ctx.canvas.width / 2;\n    const ch = ctx.canvas.height / 2;\n\n    const arcWidth = this.props.showLabel\n      ? (this.props.width * 10) / 100\n      : (this.props.width * 15) / 100;\n\n    const innerRadius = this.props.width / 2 - arcWidth;\n    const radius = (this.props.width - arcWidth) / 2;\n\n    // clear canvas\n    ctx.clearRect(0, 0, this.props.width, this.props.width);\n\n    // draw inner circle\n    ctx.beginPath();\n    ctx.arc(cw, ch, innerRadius, 0, 2 * Math.PI, false);\n    ctx.fillStyle = '#FFF';\n    ctx.fill();\n\n    // draw progress track\n    ctx.beginPath();\n    ctx.arc(cw, ch, radius, 0, 2 * Math.PI, false);\n    ctx.globalAlpha = 0.5;\n    ctx.strokeStyle = this.props.color;\n    ctx.lineWidth = arcWidth;\n    ctx.stroke();\n    ctx.globalAlpha = 1;\n\n    if (this.props.showLabel) {\n      // write progress text\n      const fontSize = (this.props.width * 15) / 100;\n      ctx.fillStyle = '#000';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.font = `${fontSize}pt Verdana`;\n      ctx.fillText(progress + '%', cw + 2, ch);\n    }\n\n    // draw progress arc\n    const deltaAngle = (progress * Math.PI * 2) / 100;\n    const startAngle = -Math.PI / 2;\n    const endAngle = -(deltaAngle - startAngle);\n    ctx.beginPath();\n    ctx.arc(cw, ch, radius, startAngle, endAngle, true);\n    ctx.strokeStyle = this.props.color;\n    ctx.stroke();\n  }\n\n  render() {\n    return (\n      <canvas\n        className={this.props.className}\n        ref=\"canvas\"\n        width={this.props.width}\n        height={this.props.width}\n      />\n    );\n  }\n}\n\nCircularProgress.propTypes = {\n  color: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n  showLabel: PropTypes.bool,\n  progress: PropTypes.number.isRequired\n};\n\nexport default CircularProgress;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport startCase from 'lodash/startCase';\n\nimport '../styles/TaskDetails.scss';\nimport BinIcon from '../assets/bin.svg';\nimport EditIcon from '../assets/edit.svg';\nimport DoneIcon from '../assets/done.svg';\n\nimport { updateTask } from '../actions';\nimport TaskForm from '../components/TaskForm';\nimport { TaskStatus } from '../constants/tasks';\nimport EmptyMessage from '../components/EmptyMessage';\nimport CircularProgress from '../components/CircularProgress';\n\nconst TaskDetails = props => {\n  const [isEditing, setIsEditing] = useState(false);\n  const task = props.selectedTask;\n  const isTaskSelected = !!task.id;\n\n  const handleMarkAsDone = () => {\n    props.dispatch(\n      updateTask({\n        ...task,\n        progress: 100,\n        status: TaskStatus.COMPLETED\n      })\n    );\n  };\n\n  const handleMarkAsArchived = () => {\n    props.dispatch(\n      updateTask({\n        ...task,\n        status: TaskStatus.ARCHIVED\n      })\n    );\n  };\n\n  const handleEditTask = task => {\n    setIsEditing(false);\n    props.dispatch(updateTask(task));\n  };\n\n  const handleFormCancel = () => {\n    setIsEditing(false);\n  };\n\n  const TaskActions = () => {\n    switch (task.status) {\n      case TaskStatus.ARCHIVED:\n        return null;\n      case TaskStatus.COMPLETED:\n        return (\n          <div className=\"task-panel__actions\">\n            <button className=\"button button_danger\" onClick={handleMarkAsArchived}>\n              <img src={BinIcon} alt=\"archive\" className=\"button__icon\" />\n              <span className=\"button__text\">Archive</span>\n            </button>\n          </div>\n        );\n\n      default:\n        return (\n          <div className=\"task-panel__actions\">\n            <button className=\"button button_info\" onClick={() => setIsEditing(true)}>\n              <img src={EditIcon} alt=\"edit\" className=\"button__icon\" />\n              <span className=\"button__text\">Edit Task</span>\n            </button>\n            <button className=\"button button_success\" onClick={handleMarkAsDone}>\n              <img src={DoneIcon} alt=\"done\" className=\"button__icon\" />\n              <span className=\"button__text\">Done</span>\n            </button>\n          </div>\n        );\n    }\n  };\n\n  if (isTaskSelected && isEditing) {\n    return (\n      <div className=\"tasks__details task-panel\">\n        <TaskForm task={task} onSubmit={handleEditTask} onCancel={handleFormCancel} />\n      </div>\n    );\n  } else if (isTaskSelected) {\n    return (\n      <div className=\"tasks__details task-panel\">\n        <h1 className=\"task-panel__title\">{task.title}</h1>\n        <div className=\"task-panel__metas\">\n          <div className=\"task-panel__section\">\n            <CircularProgress\n              className=\"task-panel__canvas\"\n              color=\"#fbc02d\"\n              showLabel\n              width={150}\n              progress={task.progress}\n            />\n          </div>\n          <div className=\"task-panel__section\">\n            <div className=\"meta\">\n              <span className=\"meta__title\">ID:</span>\n              <span className=\"meta__value\">{task.id}</span>\n            </div>\n            <div className=\"meta\">\n              <span className=\"meta__title\">Date of creation:</span>\n              <span className=\"meta__value\">{task.createdAt}</span>\n            </div>\n            <div className=\"meta\">\n              <span className=\"meta__title\">Priority:</span>\n              <span className=\"meta__value\">{startCase(task.priority)}</span>\n            </div>\n            <div className=\"meta\">\n              <span className=\"meta__title\">Tags:</span>\n              <span className=\"meta__value\">\n                {task.tags &&\n                  task.tags.split(',').map((tag, key) => (\n                    <span key={key} className=\"tag\">\n                      {tag.trim()}\n                    </span>\n                  ))}\n              </span>\n            </div>\n            <div className=\"meta\">\n              <span className=\"meta__title\">Status:</span>\n              <span className=\"meta__value\">{startCase(task.status)}</span>\n            </div>\n          </div>\n        </div>\n        {task.description && <div className=\"task-panel__details-label\">Description: </div>}\n        <p className=\"task-panel__details\">{task.description}</p>\n        {TaskActions()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"tasks__details task-panel\">\n      <EmptyMessage message=\"No tasks selected\" />\n    </div>\n  );\n};\n\nexport default connect(state => ({\n  selectedTask: state.tasks[state.selectedTask] || {}\n}))(TaskDetails);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/SearchTask.scss';\n\nconst SearchTask = props => {\n  return (\n    <div className=\"task-list__search search\">\n      <input\n        type=\"text\"\n        className=\"search__input\"\n        placeholder=\"Search tasks\"\n        onChange={e => props.onSearch(e.target.value)}\n      />\n    </div>\n  );\n};\n\nSearchTask.propType = {\n  onSearch: PropTypes.func.isRequired\n};\n\nexport default SearchTask;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/TaskSummary.scss';\nimport CircularProgress from './CircularProgress';\n\nconst TaskSummary = props => {\n  const classes = props.isSelected ? 'task-list__item task task_selected' : 'task-list__item task';\n  return (\n    <div className={classes} onClick={props.onTaskSelected}>\n      <div className=\"task__drag-handle\" />\n      <div className=\"task__details\">\n        <div className=\"task__title\">{props.task.title}</div>\n        <div className=\"task__tags\">\n          {props.task.tags &&\n            props.task.tags.split(',').map((tag, key) => (\n              <span className=\"tag\" key={key}>\n                {tag.trim()}\n              </span>\n            ))}\n        </div>\n      </div>\n      <CircularProgress\n        className=\"task__progress\"\n        color=\"#7e57c2\"\n        width={40}\n        progress={props.task.progress}\n      />\n    </div>\n  );\n};\n\nTaskSummary.propTypes = {\n  isSelected: PropTypes.bool,\n  task: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    tags: PropTypes.string,\n    progress: PropTypes.number.isRequired,\n    priority: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired\n  }),\n  onTaskSelected: PropTypes.func.isRequired\n};\n\nexport default TaskSummary;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport '../styles/TaskList.scss';\nimport { TaskStatus } from '../constants/tasks';\nimport { toggleTaskSelection } from '../actions';\nimport SearchTask from '../components/SearchTask';\nimport TaskSummary from '../components/TaskSummary';\nimport EmptyMessage from '../components/EmptyMessage';\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: []\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    const tasks = props.tasks.filter(\n      t => t.status === props.status || (props.status === 'all' && t.status !== TaskStatus.ARCHIVED)\n    );\n    this.setState({ tasks: tasks });\n  }\n\n  componentDidMount() {\n    const props = this.props;\n    const tasks = props.tasks.filter(\n      t => t.status === props.status || (props.status === 'all' && t.status !== TaskStatus.ARCHIVED)\n    );\n    this.setState({ tasks: tasks });\n  }\n\n  handleSearch(title) {\n    this.setState({\n      ...this.state,\n      tasks: this.props.tasks.filter(t => t.title.match(new RegExp(title, 'i')))\n    });\n  }\n\n  handleTaskSelection(task) {\n    this.props.dispatch(toggleTaskSelection(task.id));\n  }\n\n  render() {\n    const tasks = this.state.tasks;\n    const selectedTask = this.props.selectedTask;\n    if (tasks.length) {\n      return (\n        <div className=\"tasks__list task-list\">\n          <SearchTask onSearch={this.handleSearch.bind(this)} />\n          <div className=\"task-list__list\">\n            {tasks.map((task, key) => (\n              <TaskSummary\n                key={key}\n                task={task}\n                isSelected={selectedTask.id === task.id}\n                onTaskSelected={this.handleTaskSelection.bind(this, task)}\n              />\n            ))}\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"tasks__list task-list\">\n        <EmptyMessage message=\"No tasks!\" />\n      </div>\n    );\n  }\n}\n\nTaskList.propTypes = {\n  status: PropTypes.string\n};\n\nexport default connect(state => ({\n  tasks: Object.keys(state.tasks).map(k => state.tasks[k]),\n  selectedTask: state.tasks[state.selectedTask] || {}\n}))(TaskList);\n","import React from 'react';\n\nimport '../styles/Tasks.scss';\nimport TaskDetails from './TaskDetails';\nimport TaskList from './TaskList';\n\nconst Tasks = props => (\n  <div className=\"tasks\">\n    <TaskList status={props.status} />\n    <TaskDetails />\n  </div>\n);\n\nexport default status => props => <Tasks {...props} status={status} />;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport '../styles/App.scss';\nimport SideNav from './SideNav';\nimport MainContainer from './MainContainer';\nimport Tasks from '../containers/Tasks';\nimport { TaskStatus } from '../constants/tasks';\n\nconst App = props => (\n  <div className=\"app\">\n    <SideNav />\n    <MainContainer>\n      <Route path={`${props.match.path}/archived`} component={Tasks(TaskStatus.ARCHIVED)} />\n      <Route path={`${props.match.path}/completed`} component={Tasks(TaskStatus.COMPLETED)} />\n      <Route path={`${props.match.path}/in-progress`} component={Tasks(TaskStatus.IN_PROGRESS)} />\n      <Route path={`${props.match.path}/pending`} component={Tasks(TaskStatus.PENDING)} />\n      <Route exact path={`${props.match.path}`} component={Tasks('all')} />\n    </MainContainer>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport App from './App';\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Route path=\"/tasks\" component={App} />\n    </Router>\n  </Provider>\n);\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired\n};\n\nexport default Root;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from './reducers';\nimport Root from './components/Root';\nimport { logger } from './utils/store';\n\nimport './index.scss';\n\nconst middlewares = [logger];\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middlewares)));\n\nrender(<Root store={store} />, document.getElementById('root'));\n","/**\n * Logs all actions and states after they are dispatched.\n * @param {*} store redux store\n */\nexport const logger = store => next => action => {\n  console.group(action.type);\n  console.info('dispatching', action);\n  let result = next(action);\n  console.log('next state', store.getState());\n  console.groupEnd();\n  return result;\n};\n","module.exports = __webpack_public_path__ + \"static/media/task-search.e7cffb9d.svg\";","module.exports = __webpack_public_path__ + \"static/media/task-pending.2bfbf733.svg\";","module.exports = __webpack_public_path__ + \"static/media/task-archived.37acd060.svg\";","module.exports = __webpack_public_path__ + \"static/media/task-completed.981ae311.svg\";","module.exports = __webpack_public_path__ + \"static/media/task-in-progress.9be52237.svg\";","module.exports = __webpack_public_path__ + \"static/media/vishnu.59c6254c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/plus.8601f5bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/bin.40d5f230.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.522a418b.svg\";","module.exports = __webpack_public_path__ + \"static/media/done.c2625638.svg\";","module.exports = __webpack_public_path__ + \"static/media/www.c94aea67.svg\";"],"sourceRoot":""}